# This is a Configuration file for the python script "initNewGenome.py"
#
[inputs]
fastaDirPath = ''
annoPath = ''
mysqlDirPath = ''

[outputs]

[base_paths]

[bowtie_options]
## bowtie-build
## No input sequence or sequence file specified!
## Usage: bowtie-build [options]* <reference_in> <ebwt_outfile_base>
##     reference_in            comma-separated list of files with ref sequences
##     ebwt_outfile_base       write Ebwt data to files with this dir/basename
## Options:
##     -f                      reference files are Fasta (default)
f = None
##     -c                      reference sequences given on cmd line (as <seq_in>)
c = None
##     -C/--color              build a colorspace index
color = None
##     -a/--noauto             disable automatic -p/--bmax/--dcv memory-fitting
noauto = None
##     -p/--packed             use packed strings internally; slower, uses less mem
packed = None
##     -B                      build both letter- and colorspace indexes
B = None
##     --bmax <int>            max bucket sz for blockwise suffix-array builder
bmax = None
##     --bmaxdivn <int>        max bucket sz as divisor of ref len (default: 4)
bmaxdivn = None
##     --dcv <int>             diff-cover period for blockwise (default: 1024)
dcv = None
##     --nodc                  disable diff-cover (algorithm becomes quadratic)
nodc = None
##     -r/--noref              don't build .3/.4.ebwt (packed reference) portion
noref = None
##     -3/--justref            just build .3/.4.ebwt (packed reference) portion
justref = None
##     -o/--offrate <int>      SA is sampled every 2^offRate BWT chars (default: 5)
offrate = None
##     -t/--ftabchars <int>     of chars consumed in initial lookup (default: 10)
ftabchars = None
##     --ntoa                  convert Ns in reference to As
ntoa = None
##     --seed <int>            seed for random number generator
seed = None
##     -q/--quiet              verbose output (for debugging)
quiet = None
##     -h/--help               print detailed description of tool and its options
##     --usage                 print this usage message
##     --version               print version information and quit

[formatdb_options]
## formatdb 2.2.21   arguments:
## 
##   -t  Title for database file [String]  Optional
##   -i  Input file(s) for formatting [File In]  Optional
##   -l  Logfile name: [File Out]  Optional
##     default = formatdb.log
##   -p  Type of file
##          T - protein   
##          F - nucleotide [T/F]  Optional
##     default = T
##   -o  Parse options
##          T - True: Parse SeqId and create indexes.
##          F - False: Do not parse SeqId. Do not create indexes.
##  [T/F]  Optional
##     default = F
##   -a  Input file is database in ASN.1 format (otherwise FASTA is expected)
##          T - True, 
##          F - False.
##  [T/F]  Optional
##     default = F
##   -b  ASN.1 database in binary mode
##          T - binary, 
##          F - text mode.
##  [T/F]  Optional
##     default = F
##   -e  Input is a Seq-entry [T/F]  Optional
##     default = F
##   -n  Base name for BLAST files [String]  Optional
##   -v  Database volume size in millions of letters [Integer]  Optional
##     default = 4000
##   -s  Create indexes limited only to accessions - sparse [T/F]  Optional
##     default = F
##   -V  Verbose: check for non-unique string ids in the database [T/F]  Optional
##     default = F
##   -L  Create an alias file with this name
##         use the gifile arg (below) if set to calculate db size
##         use the BLAST db specified with -i (above) [File Out]  Optional
##   -F  Gifile (file containing list of gi's) [File In]  Optional
##   -B  Binary Gifile produced from the Gifile specified above [File Out]  Optional
##   -T  Taxid file to set the taxonomy ids in ASN.1 deflines [File In]  Optional

[mkesa_options]
## mkesa --help
## Usage: mkesa -p project [-d DATAFILE (-a ALPHABET | -b BUILTIN)] [OPTION] ...
## 
## mkesa 1.0.4 - Enhanced suffix array construction tool.
## Copyright (C) 2008 David Fleer, Robert Homann.
## 
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See mkesa -V for details and license information.
## 
## Possible OPTIONs are:
## -p, --project	Specifies the project name.
## 		This name will be used as the base name for all newly created
## 		files. If the program is used in "update mode", meaning without
## 		the -d switch, then the program will look for existing files
## 		using this name.
## 		Existing files will be used in "update mode" in order to build
## 		the requested tables where possible. Therefore, a transformed
## 		input sequence (TIS) and project file (PRJ) must exist before
## 		update mode can be used. If these files do not exist yet, use
## 		the -d switch.
project = None
## -d, --data=DATAFILE	Specifies the data file.
## 		Sequence data for which an enhanced suffix array is to be
## 		computed is read from this file. If this switch is used, then
## 		mkesa operates in "create mode". All requested files will be
## 		re-built from scratch, existing files will be overwritten.
## 		Supported file formats: FASTA, UniProt.
data = None
## -a, --al1=FILE	Specifies an alphabet file.
## 		The alphabet is used for transforming the data file supplied
## 		with the -d switch.
## 		This switch can only be used in "create mode" (i.e., in
## 		conjunction with the -d switch).
al1 = None
## -b BUILTIN	Specifies a built-in alphabet.
## 		Possible choices for BUILTIN are one of 'D'NA, 'R'NA,
## 		'N'ucleotide, and 'P'rotein.
## 		If both -a and -b switches are given, then -a takes precedence.
## 		This switch can only be used in "create mode" (i.e., in
## 		conjunction with the -d switch).
b = N
## -s		Specifies the maximum depth used for shallow sorting.
## 		After the specified depth is reached the sorting algorithm is
## 		switched to depth sorting. (Default: 500.)
s = None
## -e, --segment-size	Specifies the segment size used for anchor sorting.
## 		Given the anchor size d and input size n, anchor size requires
## 		6n/d additional bytes of memory. Must be between 2 and 65535.
## 		(Default: 500.)
e = None
## -g, --generate	Specifies what optional tables should be generated.
## 		Valid table names are
## 			"suf" (suffix array, [*])
## 			"sti" (inverse suffix array)
## 			"lcp" (LCP information)
## 			"skp" (skip table, implies "lcp")
## 			"tis" (transformed input sequence, [*])
## 			"ois" (original input sequence, "create mode" only)
## 		Multiple table names can be specified as a comma-seperated
## 		list, e.g., "-g lcp,sti". Tables marked with [*] are always
## 		implicitly specified and need not be given in the list. Also
## 		note that existing tables are not re-built in "update mode".
## -t, --threaded	Enables threading.
## 		The default number of worker threads used is 4.
## -c, --threadcount	Enables threading with the specified number of worker
## 		threads (between 1 and 255).
## -v, --verbose	Enables verbose mode.
## 		Verbosity can be increased by giving this option multiple
## 		times (like "-vvv").
## -h, --help	Displays this message.
## -V, --version	Displays version and copyright information.
## -w, --width	Specifies the bit width for each entry of the suffix array.
## 		Valid options are 32 (for 32 bit suffix arrays) or 64 (for 64
## 		bit suffix arrays). Be advised that chosing 32 bit mode on very
## 		large input files (roughly larger than 2^31) may result in
## 		undefined results since the suffix array entries might overrun.


[mkvtree_options]
# mkvtree -help
# -db         specify database files (mandatory)
# -smap       specify file containing a symbol mapping
#             this describes the grouping of symbols
#             possibly set environment variable
#             MKVTREESMAPDIR to path
#             where these files can be found
# -dna        input is DNA sequence
# -protein    input is Protein sequence
# -indexname  specify name for index to be generated
# -pl         specify prefix length for bucket sort
#             recommendation: use without argument;
#             then a reasonable prefix length is automatically determined
# -tis        output transformed input sequences (tistab) to file
# -ois        output original input sequences (oistab) to file
# -suf        output suffix array (suftab) to file
# -sti1       output reduced inverse suffix array (sti1tab) to file
# -bwt        output Burrows-Wheeler Transformation (bwttab) to file
# -bck        output bucket boundaries (bcktab) to file
# -lcp        output longest common prefix lengths (lcptab) to file
# -skp        output skip values (skptab) to file
# -allout     output all index tables to files
# -maxdepth   restrict the sorting to prefixes of the given length
# -v          verbose mode
# -version    show the version of the Vmatch package
# -help       this option

[mysql_options]


